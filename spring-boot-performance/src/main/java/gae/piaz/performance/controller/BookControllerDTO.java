package gae.piaz.performance.controller;

import gae.piaz.performance.controller.dto.BookDTO;
import gae.piaz.performance.model.Book;
import gae.piaz.performance.service.BookService;
import gae.piaz.performance.service.mapper.BookMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

/**
* Generated by Springboot-3layer-Generator at Jan 6, 2021, 8:30:41 PM
*/
@RestController
@RequestMapping("/book-dto/")
public class BookControllerDTO implements CrudController<BookDTO, Integer>{

    @Autowired
    private BookService service;

    @Autowired
    private BookMapper mapper;

    @Override
    public ResponseEntity<BookDTO> create(@RequestBody BookDTO dto) {
       Book entity = mapper.toEntity(dto);
       entity = service.create(entity);
       return ResponseEntity.ok(mapper.toDto(entity));
    }

    @Override
    public ResponseEntity<BookDTO> update(@RequestBody BookDTO dto) {
      Book entity = mapper.toEntity(dto);
       entity = service.update(entity);
       return ResponseEntity.ok(mapper.toDto(entity));
    }

    @Override
    public ResponseEntity<Page<BookDTO>> read(
            @RequestBody BookDTO dto,
            @RequestParam("page") Integer page,
            @RequestParam("size") Integer size) {
        Pageable pageable = PageRequest.of(page,size);
        Book entity = mapper.toEntity(dto);
        Page<BookDTO> pages = service.read(entity, pageable).map(mapper::toDto);
        return ResponseEntity.ok(pages);
    }

    @Override
    public ResponseEntity<BookDTO> readOne(@PathVariable("id") Integer primaryKey) {
         Book entity = service.readOne(primaryKey);
         return ResponseEntity.ok(mapper.toDto(entity));
    }

    @Override
    public void delete(Integer primaryKey) {
        service.delete(primaryKey);
    }
}